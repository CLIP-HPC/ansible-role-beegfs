---
- name: Unmount client mount path
  mount:
    path: "{{ item.beegfs_path_client }}"
    state: unmounted
  become: yes 
  notify: Restart BeeGFS client service
  when: beegfs_enable.client | bool
  with_items: "{{ beegfs_client_confs }}"

- name: Define BeeGFS mount point in mount config file
  lineinfile:
    path: "/etc/beegfs/beegfs-mounts.conf"
    regexp: "^{{ item.beegfs_path_client }}"
    state: absent
  become: yes 
  notify: Restart BeeGFS client service
  when: beegfs_enable.client | bool
  with_items: "{{ beegfs_client_confs }}"

- name: Disable and stop BeeGFS server services
  service:
    name: "{{ item.name }}"
    enabled: no
    state: stopped
  become: yes
  when: item.enable | bool
  with_items:
  - { name: beegfs-mgmtd, enable: "{{ beegfs_enable.mgmt }}" }
  - { name: beegfs-meta, enable: "{{ beegfs_enable.meta }}" }
  - { name: beegfs-storage, enable: "{{ beegfs_enable.oss }}" }
  - { name: beegfs-admon, enable: "{{ beegfs_enable.admon }}" }

- name: Clear storeStorageDirectory
  lineinfile:
    path: /etc/beegfs/beegfs-storage.conf
    regexp: "^storeStorageDirectory"
    line: "storeStorageDirectory ="
  become: yes
  when: beegfs_enable.oss | bool

- name: Unmount beegfs data
  mount:
    path: "{{ item }}"
    state: unmounted
  become: yes
  with_items:
  - "{{ beegfs_path_oss }}"
  when:
  - beegfs_enable.oss | bool
  - beegfs_dev_oss is defined

- name: Remove all beegfs oss folders
  file:
    path: "{{ item }}"
    state: absent
  become: yes
  when: beegfs_enable.oss | bool
  with_items: "{{ beegfs_path_oss }}"

- name: Remove other beegfs folders
  file:
    path: "{{ item.name }}"
    state: absent
  become: yes
  when: item.enable | bool
  with_items:
  - { name: "{{ beegfs_path_meta }}", enable: "{{ beegfs_enable.meta }}" } 
  - { name: "{{ beegfs_path_mgmt }}", enable: "{{ beegfs_enable.mgmt }}" }
...
