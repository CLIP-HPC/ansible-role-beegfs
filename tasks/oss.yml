---
- name: Install packages for BeeGFS object storage server
  package:
    name: beegfs-storage
    state: present
  become: yes
  notify: Restart BeeGFS storage service

- name: Create a list of devices that are mounted
  set_fact:
    mounted_devs: "{{ ansible_mounts | map(attribute='device') | list }}"

- name: Ensures BeeGFS client service is not running
  service:
    name: beegfs-client
    state: stopped
  become: yes
  when: beegfs_force_format | bool
  notify: Restart BeeGFS storage service

- name: Ensures BeeGFS storage services are not running
  service:
    name: "beegfs-storage@{{ item }}"
    state: stopped
  with_items: "{{ beegfs_block_devices }}"
  become: yes
  when: beegfs_force_format | bool
  notify: Restart BeeGFS storage service

- name: Create storage config dirs
  file:
    path: "/etc/beegfs/{{ item }}.d/"
    state: directory
  loop: "{{ beegfs_block_devices }}"
  become: yes

- name: Add template beegfs-storage conf
  copy:
    src: "/etc/beegfs/beegfs-storage.conf"
    dest: "/etc/beegfs/{{ item }}.d/beegfs-storage.conf"
    remote_src: yes
    force: no
  loop: "{{ beegfs_block_devices }}"
  become: yes

- name: Prepare storage devices
  block:
  - name: Unmount storage device if beegfs_force_format is true
    mount:
      src: "{{ item.0 }}"
      path: "{{ item.1 }}"
      state: unmounted
    when: beegfs_force_format | bool
    with_together:
    - "{{ beegfs_dev_oss }}"
    - "{{ beegfs_path_oss }}"
    notify: Restart BeeGFS storage service
  - name: Attempt to format if the device is not mounted or if beegfs_force_format is true
    filesystem:
      dev: "{{ item }}"
      fstype: "{{ beegfs_fstype }}"
      force: "{{ beegfs_force_format | bool }}"
      opts: -K -d su=128k,sw=8 -l version=2,su=128k -isize=512
    when: (item not in mounted_devs) or
          (beegfs_force_format | bool)
    with_items:
    - "{{ beegfs_dev_oss }}"
    notify: Restart BeeGFS storage service
  - name: Mount filesystem, fail if the fstype doesn't match
    mount:
      src: "{{ item.0 }}"
      path: "{{ item.1 }}"
      fstype: "{{ beegfs_fstype }}"
      state: mounted
      opts: noatime,nodiratime,logbufs=8,logbsize=256k,largeio,inode64,swalloc,allocsize=131072k,nobarrier      
    with_together:
    - "{{ beegfs_dev_oss }}"
    - "{{ beegfs_path_oss }}"
    notify: Restart BeeGFS storage service
  become: yes
  when: beegfs_dev_oss is defined

- name: Run storage service setup script
  vars:
    replace_flag: "{% if (item == beegfs_path_oss[0]) and (beegfs_force_format | bool) %} -r {% endif %}"
  command: |
    /opt/beegfs/sbin/beegfs-setup-storage \
    -p {{ item.0 }} \
    -m {{ beegfs_host_mgmt }} \
    -c /etc/beegfs/{{ item.1 }}.d/beegfs-storage.conf \
    -I {{ beegfs_host_mgmt }}-{{ item.1 }}
    -S {{ beegfs_host_mgmt }}-{{ item.1 }}
    {{ replace_flag }} -f
  args:
    creates: "{{ item.0 }}/originalNodeID"
  with_together:
  - "{{ beegfs_path_oss }}"
  - "{{ beegfs_block_devices }}"
  become: yes
  notify: Restart BeeGFS storage service

- name: set TCP storage port
  lineinfile:
    path: "/etc/beegfs/{{ item.0 }}.d/beegfs-storage.conf"
    regexp: '^connStoragePortTCP'
    line: "connStoragePortTCP = {{ item.1 }}"
  with_together:
  - "{{ beegfs_block_devices }}"
  - "{{ beegfs_port_oss }}"
  become: yes
  notify: Restart BeeGFS storage service

- name: set UDP storage port
  lineinfile:
    path: "/etc/beegfs/{{ item.0 }}.d/beegfs-storage.conf"
    regexp: '^connStoragePortUDP'
    line: "connStoragePortUDP = {{ item.1 }}"
  with_together:
  - "{{ beegfs_block_devices }}"
  - "{{ beegfs_port_oss }}"
  become: yes
  notify: Restart BeeGFS storage service

- name: Specify connInterfacesFile
  lineinfile:
    path: /etc/beegfs/beegfs-storage.conf
    regexp: "^connInterfacesFile"
    line: "connInterfacesFile           = /etc/beegfs/connInterfacesFile"
  become: yes
  notify: Restart BeeGFS storage service
...
