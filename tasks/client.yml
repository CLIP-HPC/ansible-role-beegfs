---
- name: Install packages for BeeGFS client
  package:
    name: "{{ item }}"
    state: "{{ beegfs_package_action }}"
  with_items:
    - beegfs-client
    - beegfs-helperd
    - beegfs-utils
  become: true
  notify: Restart BeeGFS client service

- name: Define client kernel build for IB
  lineinfile:
    path: "/etc/beegfs/beegfs-client-autobuild.conf"
    regexp: "^buildArgs="
    line: "{{ item.line }}"
  when: item.condition
  with_items:
    - { line: "buildArgs=-j8 BEEGFS_OPENTK_IBVERBS=1", condition: "{{ beegfs_rdma | bool }}" }
    - { line: "buildArgs=-j8", condition: "{{ not beegfs_rdma | bool }}" }
  notify: Restart BeeGFS client service
  become: true

- name: Ensure kernel development headers are present
  package:
    name: "{{ beegfs_distro_vars[ansible_os_family]['kernel_dev_pkg'] }}-{{ ansible_kernel }}"
    state: present
  notify: Restart BeeGFS client service
  become: true

- name: Ensure gcc is installed
  package:
    name: "gcc"
    state: present
  become: true
  notify: Restart BeeGFS client service

- name: Rebuild the BeeGFS client kernel module
  command: /etc/init.d/beegfs-client rebuild
  args:
    creates: "/lib/modules/{{ ansible_kernel }}/updates/fs/beegfs_autobuild/beegfs.ko"
  become: true
  notify: Restart BeeGFS client service

- name: Ensure the BeeGFS mount point exists
  file:
    path: "{{ client_path }}"
    state: directory
  become: true
  notify: Restart BeeGFS client service

- name: Copy over beegfs-mounts config file
  template:
    src: beegfs-mounts.conf.j2
    dest: /etc/beegfs/beegfs-mounts.conf
    mode: 0644
  become: true
  notify: Restart BeeGFS client service

- name: Make of copy of BeeGFS client config file if it doesn't exist
  copy:
    remote_src: true
    src: /etc/beegfs/beegfs-client.conf
    dest: "/etc/beegfs/beegfs-client-{{ client_mgmt_host }}.conf"
    force: false
  become: true
  notify: Restart BeeGFS client service

- name: Configure beegfs-client config file to point to the specified management host
  lineinfile:
    dest: "/etc/beegfs/beegfs-client-{{ client_mgmt_host }}.conf"
    regexp: "^sysMgmtdHost"
    line: "sysMgmtdHost = {{ client_mgmt_host }}"
  become: true

- name: Configure beegfs-client config file to use the specified port
  lineinfile:
    dest: "/etc/beegfs/beegfs-client-{{ client_mgmt_host }}.conf"
    regexp: "^connClientPortUDP"
    line: "connClientPortUDP = {{ client_port }}"
  become: true

- name: Configure beegfs-client config file to ensure the specifed connection interface is used
  lineinfile:
    dest: "/etc/beegfs/beegfs-client-{{ client_mgmt_host }}.conf"
    regexp: "^connInterfacesFile"
    line: "connInterfacesFile = /etc/beegfs/connInterfacesFile"
  become: true

- name: Copy default beegfs-client config file to enable beegfs_ctl in the management host
  copy:
    remote_src: true
    dest: /etc/beegfs/beegfs-client.conf
    src: "/etc/beegfs/beegfs-client-{{ client_mgmt_host }}.conf"
    force: true
  when: client_mgmt_host == inventory_hostname
  become: true

- name: Copy remote beegfs-client.service to /etc/systemd/system/
  copy:
    remote_src: true
    src: /usr/lib/systemd/system/beegfs-client.service
    dest: /etc/systemd/system/beegfs-client.service
  notify: Restart BeeGFS client service
  become: true

- name: Edit /etc/systemd/system/beegfs-client.service
  ini_file:
    path: /etc/systemd/system/beegfs-client.service
    section: Service
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - option: Type
      value: forking
    - option: Restart
      value: on-failure
    - option: RestartSec
      value: 5s
  notify: Restart BeeGFS client service
  become: true
...
