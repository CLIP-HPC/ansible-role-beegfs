---
- name: Install packages for BeeGFS client
  package:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
  - beegfs-client
  - beegfs-helperd
  - beegfs-utils
  notify: Enable and start BeeGFS client service

- name: Detect the version of the running kernel
  command: "uname -r"
  register: kernel_version
  changed_when: false

- name: Define client kernel build for IB
  block:
  - name: Define client kernel build for IB
    lineinfile: 
      path: "/etc/beegfs/beegfs-client-autobuild.conf"
      regexp: "^buildArgs="
      line: "buildArgs=-j8 BEEGFS_OPENTK_IBVERBS=1"
    notify: Enable and start BeeGFS client service
  - name: Ensure kernel development headers are present
    package:
      name: "kernel-devel-{{ kernel_version.stdout }}"
      state: present
    notify: Enable and start BeeGFS client service
  become: yes
  when: beegfs_rdma | bool

- name: Ensure gcc is installed
  package:
    name: "gcc"
    state: present
  become: yes
  notify: Enable and start BeeGFS client service

- name: Rebuild the BeeGFS client kernel module
  command: /etc/init.d/beegfs-client rebuild
  args:
    creates: "/lib/modules/{{kernel_version.stdout}}/updates/fs/beegfs_autobuild/beegfs.ko"
  become: yes
  notify: Enable and start BeeGFS client service

- name: Ensure the BeeGFS mount point exists
  file:
    path: "{{ beegfs_path_client }}"
    state: directory
  become: yes
  notify: Enable and start BeeGFS client service

- name: Set BeeGFS client config path
  set_fact:
    beegfs_path_client_config: "/etc/beegfs/beegfs-client-{{ beegfs_host_mgmt }}.conf"

- name: Define BeeGFS mount point in mount config file
  lineinfile:
    path: "/etc/beegfs/beegfs-mounts.conf"
    regexp: "^{{ beegfs_path_client }}"
    line: "{{ beegfs_path_client }} {{ beegfs_path_client_config }}"
    mode: 0644
  become: yes 
  notify: Enable and start BeeGFS client service

- name: Stat client config file
  stat:
    path: "{{ beegfs_path_client_config }}"
  register: stat_result

- name: Make of copy of BeeGFS client config file if it doesn't exist
  copy:
    remote_src: yes
    src: "/etc/beegfs/beegfs-client.conf"
    dest: "{{ beegfs_path_client_config }}"
  become: yes
  notify: Enable and start BeeGFS client service
  when: stat_result.stat.exists is failed

- name: Specify connInterfacesFile
  lineinfile:
    path: "{{ beegfs_path_client_config }}"
    regexp: "{{ item.0 }}"
    line: "{{ item.1 }}"
  with_items:
  - ["^sysMgmtdHost","sysMgmtdHost = {{ beegfs_host_mgmt }}"]
  - ["^connClientPortUDP","connClientPortUDP = {{ beegfs_port_client }}"]
  - ["^connInterfacesFile","connInterfacesFile = /etc/beegfs/connInterfacesFile"]
  become: yes
  notify: Enable and start BeeGFS client service
...
